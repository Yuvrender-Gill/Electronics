|alu
SW[0] => SW[0].IN3
SW[1] => SW[1].IN3
SW[2] => SW[2].IN3
SW[3] => SW[3].IN3
SW[4] => SW[4].IN3
SW[5] => SW[5].IN3
SW[6] => SW[6].IN3
SW[7] => SW[7].IN3
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => KEY[0].IN2
KEY[1] => KEY[1].IN2
KEY[2] => KEY[2].IN2
LEDR[0] <= alu_i:A1.ALUout
LEDR[1] <= alu_i:A1.ALUout
LEDR[2] <= alu_i:A1.ALUout
LEDR[3] <= alu_i:A1.ALUout
LEDR[4] <= alu_i:A1.ALUout
LEDR[5] <= alu_i:A1.ALUout
LEDR[6] <= alu_i:A1.ALUout
LEDR[7] <= alu_i:A1.ALUout
LEDR[8] <= <GND>
LEDR[9] <= <GND>
HEX0[0] <= hexDisplay:hex0.HEX_out
HEX0[1] <= hexDisplay:hex0.HEX_out
HEX0[2] <= hexDisplay:hex0.HEX_out
HEX0[3] <= hexDisplay:hex0.HEX_out
HEX0[4] <= hexDisplay:hex0.HEX_out
HEX0[5] <= hexDisplay:hex0.HEX_out
HEX0[6] <= hexDisplay:hex0.HEX_out
HEX1[0] <= hexDisplay:hex1.HEX_out
HEX1[1] <= hexDisplay:hex1.HEX_out
HEX1[2] <= hexDisplay:hex1.HEX_out
HEX1[3] <= hexDisplay:hex1.HEX_out
HEX1[4] <= hexDisplay:hex1.HEX_out
HEX1[5] <= hexDisplay:hex1.HEX_out
HEX1[6] <= hexDisplay:hex1.HEX_out
HEX2[0] <= hexDisplay:hex2.HEX_out
HEX2[1] <= hexDisplay:hex2.HEX_out
HEX2[2] <= hexDisplay:hex2.HEX_out
HEX2[3] <= hexDisplay:hex2.HEX_out
HEX2[4] <= hexDisplay:hex2.HEX_out
HEX2[5] <= hexDisplay:hex2.HEX_out
HEX2[6] <= hexDisplay:hex2.HEX_out
HEX3[0] <= hexDisplay:hex3.HEX_out
HEX3[1] <= hexDisplay:hex3.HEX_out
HEX3[2] <= hexDisplay:hex3.HEX_out
HEX3[3] <= hexDisplay:hex3.HEX_out
HEX3[4] <= hexDisplay:hex3.HEX_out
HEX3[5] <= hexDisplay:hex3.HEX_out
HEX3[6] <= hexDisplay:hex3.HEX_out
HEX4[0] <= hexDisplay:hex4.HEX_out
HEX4[1] <= hexDisplay:hex4.HEX_out
HEX4[2] <= hexDisplay:hex4.HEX_out
HEX4[3] <= hexDisplay:hex4.HEX_out
HEX4[4] <= hexDisplay:hex4.HEX_out
HEX4[5] <= hexDisplay:hex4.HEX_out
HEX4[6] <= hexDisplay:hex4.HEX_out
HEX5[0] <= hexDisplay:hex5.HEX_out
HEX5[1] <= hexDisplay:hex5.HEX_out
HEX5[2] <= hexDisplay:hex5.HEX_out
HEX5[3] <= hexDisplay:hex5.HEX_out
HEX5[4] <= hexDisplay:hex5.HEX_out
HEX5[5] <= hexDisplay:hex5.HEX_out
HEX5[6] <= hexDisplay:hex5.HEX_out


|alu|alu_i:A1
A[0] => A[0].IN2
A[1] => A[1].IN2
A[2] => A[2].IN2
A[3] => A[3].IN2
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
functions[0] => Mux0.IN10
functions[0] => Mux1.IN10
functions[0] => Mux2.IN10
functions[0] => Mux3.IN8
functions[0] => Mux4.IN8
functions[0] => Mux5.IN8
functions[0] => Mux6.IN8
functions[0] => Mux7.IN8
functions[1] => Mux0.IN9
functions[1] => Mux1.IN9
functions[1] => Mux2.IN9
functions[1] => Mux3.IN7
functions[1] => Mux4.IN7
functions[1] => Mux5.IN7
functions[1] => Mux6.IN7
functions[1] => Mux7.IN7
functions[2] => Mux0.IN8
functions[2] => Mux1.IN8
functions[2] => Mux2.IN8
functions[2] => Mux3.IN6
functions[2] => Mux4.IN6
functions[2] => Mux5.IN6
functions[2] => Mux6.IN6
functions[2] => Mux7.IN6
ALUout[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
ALUout[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ALUout[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ALUout[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ALUout[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ALUout[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ALUout[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ALUout[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA1
R_in1[0] => R_in1[0].IN1
R_in1[1] => R_in1[1].IN1
R_in1[2] => R_in1[2].IN1
R_in1[3] => R_in1[3].IN1
R_in2[0] => R_in2[0].IN1
R_in2[1] => R_in2[1].IN1
R_in2[2] => R_in2[2].IN1
R_in2[3] => R_in2[3].IN1
Cin => Cin.IN1
S_out[0] <= full_adder:FA0.S_adder
S_out[1] <= full_adder:FA1.S_adder
S_out[2] <= full_adder:FA2.S_adder
S_out[3] <= full_adder:FA3.S_adder
Cout <= full_adder:FA3.cout


|alu|alu_i:A1|ripple_full_adder:RFA1|full_adder:FA0
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA1|full_adder:FA1
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA1|full_adder:FA2
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA1|full_adder:FA3
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA0
R_in1[0] => R_in1[0].IN1
R_in1[1] => R_in1[1].IN1
R_in1[2] => R_in1[2].IN1
R_in1[3] => R_in1[3].IN1
R_in2[0] => R_in2[0].IN1
R_in2[1] => R_in2[1].IN1
R_in2[2] => R_in2[2].IN1
R_in2[3] => R_in2[3].IN1
Cin => Cin.IN1
S_out[0] <= full_adder:FA0.S_adder
S_out[1] <= full_adder:FA1.S_adder
S_out[2] <= full_adder:FA2.S_adder
S_out[3] <= full_adder:FA3.S_adder
Cout <= full_adder:FA3.cout


|alu|alu_i:A1|ripple_full_adder:RFA0|full_adder:FA0
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA0|full_adder:FA1
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA0|full_adder:FA2
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A1|ripple_full_adder:RFA0|full_adder:FA3
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2
A[0] => A[0].IN2
A[1] => A[1].IN2
A[2] => A[2].IN2
A[3] => A[3].IN2
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
functions[0] => Mux0.IN10
functions[0] => Mux1.IN10
functions[0] => Mux2.IN10
functions[0] => Mux3.IN8
functions[0] => Mux4.IN8
functions[0] => Mux5.IN8
functions[0] => Mux6.IN8
functions[0] => Mux7.IN8
functions[1] => Mux0.IN9
functions[1] => Mux1.IN9
functions[1] => Mux2.IN9
functions[1] => Mux3.IN7
functions[1] => Mux4.IN7
functions[1] => Mux5.IN7
functions[1] => Mux6.IN7
functions[1] => Mux7.IN7
functions[2] => Mux0.IN8
functions[2] => Mux1.IN8
functions[2] => Mux2.IN8
functions[2] => Mux3.IN6
functions[2] => Mux4.IN6
functions[2] => Mux5.IN6
functions[2] => Mux6.IN6
functions[2] => Mux7.IN6
ALUout[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
ALUout[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ALUout[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ALUout[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ALUout[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ALUout[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ALUout[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ALUout[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA1
R_in1[0] => R_in1[0].IN1
R_in1[1] => R_in1[1].IN1
R_in1[2] => R_in1[2].IN1
R_in1[3] => R_in1[3].IN1
R_in2[0] => R_in2[0].IN1
R_in2[1] => R_in2[1].IN1
R_in2[2] => R_in2[2].IN1
R_in2[3] => R_in2[3].IN1
Cin => Cin.IN1
S_out[0] <= full_adder:FA0.S_adder
S_out[1] <= full_adder:FA1.S_adder
S_out[2] <= full_adder:FA2.S_adder
S_out[3] <= full_adder:FA3.S_adder
Cout <= full_adder:FA3.cout


|alu|alu_i:A2|ripple_full_adder:RFA1|full_adder:FA0
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA1|full_adder:FA1
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA1|full_adder:FA2
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA1|full_adder:FA3
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA0
R_in1[0] => R_in1[0].IN1
R_in1[1] => R_in1[1].IN1
R_in1[2] => R_in1[2].IN1
R_in1[3] => R_in1[3].IN1
R_in2[0] => R_in2[0].IN1
R_in2[1] => R_in2[1].IN1
R_in2[2] => R_in2[2].IN1
R_in2[3] => R_in2[3].IN1
Cin => Cin.IN1
S_out[0] <= full_adder:FA0.S_adder
S_out[1] <= full_adder:FA1.S_adder
S_out[2] <= full_adder:FA2.S_adder
S_out[3] <= full_adder:FA3.S_adder
Cout <= full_adder:FA3.cout


|alu|alu_i:A2|ripple_full_adder:RFA0|full_adder:FA0
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA0|full_adder:FA1
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA0|full_adder:FA2
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|alu_i:A2|ripple_full_adder:RFA0|full_adder:FA3
A_adder => S_adder.IN0
A_adder => cout.IN0
A_adder => cout.IN0
B_adder => S_adder.IN1
B_adder => cout.IN1
B_adder => cout.IN0
cin => S_adder.IN1
cin => cout.IN1
cin => cout.IN1
S_adder <= S_adder.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0
HEX_in[0] => HEX_in[0].IN7
HEX_in[1] => HEX_in[1].IN7
HEX_in[2] => HEX_in[2].IN7
HEX_in[3] => HEX_in[3].IN7
HEX_out[0] <= segment0:ZERO.x
HEX_out[1] <= segment1:ONE.x
HEX_out[2] <= segment2:TWO.x
HEX_out[3] <= segment3:THREE.x
HEX_out[4] <= segment4:FOUR.x
HEX_out[5] <= segment5:FIVE.x
HEX_out[6] <= segment6:SIX.x


|alu|hexDisplay:hex0|segment0:ZERO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0|segment1:ONE
c3 => x.IN1
c3 => x.IN1
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0|segment2:TWO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0|segment3:THREE
c3 => x.IN0
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c2 => x.IN0
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0|segment4:FOUR
c3 => x.IN1
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0|segment5:FIVE
c3 => x.IN0
c3 => x.IN0
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex0|segment6:SIX
c3 => x.IN0
c3 => x.IN1
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1
HEX_in[0] => HEX_in[0].IN7
HEX_in[1] => HEX_in[1].IN7
HEX_in[2] => HEX_in[2].IN7
HEX_in[3] => HEX_in[3].IN7
HEX_out[0] <= segment0:ZERO.x
HEX_out[1] <= segment1:ONE.x
HEX_out[2] <= segment2:TWO.x
HEX_out[3] <= segment3:THREE.x
HEX_out[4] <= segment4:FOUR.x
HEX_out[5] <= segment5:FIVE.x
HEX_out[6] <= segment6:SIX.x


|alu|hexDisplay:hex1|segment0:ZERO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1|segment1:ONE
c3 => x.IN1
c3 => x.IN1
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1|segment2:TWO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1|segment3:THREE
c3 => x.IN0
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c2 => x.IN0
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1|segment4:FOUR
c3 => x.IN1
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1|segment5:FIVE
c3 => x.IN0
c3 => x.IN0
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex1|segment6:SIX
c3 => x.IN0
c3 => x.IN1
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2
HEX_in[0] => HEX_in[0].IN7
HEX_in[1] => HEX_in[1].IN7
HEX_in[2] => HEX_in[2].IN7
HEX_in[3] => HEX_in[3].IN7
HEX_out[0] <= segment0:ZERO.x
HEX_out[1] <= segment1:ONE.x
HEX_out[2] <= segment2:TWO.x
HEX_out[3] <= segment3:THREE.x
HEX_out[4] <= segment4:FOUR.x
HEX_out[5] <= segment5:FIVE.x
HEX_out[6] <= segment6:SIX.x


|alu|hexDisplay:hex2|segment0:ZERO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2|segment1:ONE
c3 => x.IN1
c3 => x.IN1
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2|segment2:TWO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2|segment3:THREE
c3 => x.IN0
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c2 => x.IN0
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2|segment4:FOUR
c3 => x.IN1
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2|segment5:FIVE
c3 => x.IN0
c3 => x.IN0
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex2|segment6:SIX
c3 => x.IN0
c3 => x.IN1
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3
HEX_in[0] => HEX_in[0].IN7
HEX_in[1] => HEX_in[1].IN7
HEX_in[2] => HEX_in[2].IN7
HEX_in[3] => HEX_in[3].IN7
HEX_out[0] <= segment0:ZERO.x
HEX_out[1] <= segment1:ONE.x
HEX_out[2] <= segment2:TWO.x
HEX_out[3] <= segment3:THREE.x
HEX_out[4] <= segment4:FOUR.x
HEX_out[5] <= segment5:FIVE.x
HEX_out[6] <= segment6:SIX.x


|alu|hexDisplay:hex3|segment0:ZERO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3|segment1:ONE
c3 => x.IN1
c3 => x.IN1
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3|segment2:TWO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3|segment3:THREE
c3 => x.IN0
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c2 => x.IN0
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3|segment4:FOUR
c3 => x.IN1
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3|segment5:FIVE
c3 => x.IN0
c3 => x.IN0
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex3|segment6:SIX
c3 => x.IN0
c3 => x.IN1
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4
HEX_in[0] => HEX_in[0].IN7
HEX_in[1] => HEX_in[1].IN7
HEX_in[2] => HEX_in[2].IN7
HEX_in[3] => HEX_in[3].IN7
HEX_out[0] <= segment0:ZERO.x
HEX_out[1] <= segment1:ONE.x
HEX_out[2] <= segment2:TWO.x
HEX_out[3] <= segment3:THREE.x
HEX_out[4] <= segment4:FOUR.x
HEX_out[5] <= segment5:FIVE.x
HEX_out[6] <= segment6:SIX.x


|alu|hexDisplay:hex4|segment0:ZERO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4|segment1:ONE
c3 => x.IN1
c3 => x.IN1
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4|segment2:TWO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4|segment3:THREE
c3 => x.IN0
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c2 => x.IN0
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4|segment4:FOUR
c3 => x.IN1
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4|segment5:FIVE
c3 => x.IN0
c3 => x.IN0
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex4|segment6:SIX
c3 => x.IN0
c3 => x.IN1
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5
HEX_in[0] => HEX_in[0].IN7
HEX_in[1] => HEX_in[1].IN7
HEX_in[2] => HEX_in[2].IN7
HEX_in[3] => HEX_in[3].IN7
HEX_out[0] <= segment0:ZERO.x
HEX_out[1] <= segment1:ONE.x
HEX_out[2] <= segment2:TWO.x
HEX_out[3] <= segment3:THREE.x
HEX_out[4] <= segment4:FOUR.x
HEX_out[5] <= segment5:FIVE.x
HEX_out[6] <= segment6:SIX.x


|alu|hexDisplay:hex5|segment0:ZERO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5|segment1:ONE
c3 => x.IN1
c3 => x.IN1
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5|segment2:TWO
c3 => x.IN0
c3 => x.IN0
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5|segment3:THREE
c3 => x.IN0
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c2 => x.IN0
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5|segment4:FOUR
c3 => x.IN1
c3 => x.IN0
c2 => x.IN0
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5|segment5:FIVE
c3 => x.IN0
c3 => x.IN0
c3 => x.IN1
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN0
c1 => x.IN1
c0 => x.IN1
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


|alu|hexDisplay:hex5|segment6:SIX
c3 => x.IN0
c3 => x.IN1
c3 => x.IN0
c2 => x.IN1
c2 => x.IN1
c2 => x.IN1
c1 => x.IN1
c1 => x.IN1
c1 => x.IN0
c0 => x.IN1
c0 => x.IN1
x <= x.DB_MAX_OUTPUT_PORT_TYPE


